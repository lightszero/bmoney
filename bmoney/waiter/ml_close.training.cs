﻿// This file was auto-generated by ML.NET Model Builder. 
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Microsoft.ML.Data;
using Microsoft.ML.Trainers.LightGbm;
using Microsoft.ML.Trainers;
using Microsoft.ML;

namespace Waiter
{
    public partial class Ml_close
    {
        public static ITransformer RetrainPipeline(MLContext context, IDataView trainData)
        {
            var pipeline = BuildPipeline(context);
            var model = pipeline.Fit(trainData);

            return model;
        }

        /// <summary>
        /// build the pipeline that is used from model builder. Use this function to retrain model.
        /// </summary>
        /// <param name="mlContext"></param>
        /// <returns></returns>
        public static IEstimator<ITransformer> BuildPipeline(MLContext mlContext)
        {
            // Data process configuration with pipeline data transformations
            var pipeline = mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@"k0000", @"k0000"),new InputOutputColumnPair(@"k0001", @"k0001"),new InputOutputColumnPair(@"k0002", @"k0002"),new InputOutputColumnPair(@"k0003", @"k0003"),new InputOutputColumnPair(@"k0004", @"k0004"),new InputOutputColumnPair(@"k0005", @"k0005"),new InputOutputColumnPair(@"k0006", @"k0006"),new InputOutputColumnPair(@"k0007", @"k0007"),new InputOutputColumnPair(@"k0008", @"k0008"),new InputOutputColumnPair(@"k0009", @"k0009"),new InputOutputColumnPair(@"k0010", @"k0010"),new InputOutputColumnPair(@"k0011", @"k0011"),new InputOutputColumnPair(@"k0012", @"k0012"),new InputOutputColumnPair(@"k0013", @"k0013"),new InputOutputColumnPair(@"k0014", @"k0014"),new InputOutputColumnPair(@"k0015", @"k0015"),new InputOutputColumnPair(@"k0016", @"k0016"),new InputOutputColumnPair(@"k0017", @"k0017"),new InputOutputColumnPair(@"k0018", @"k0018"),new InputOutputColumnPair(@"k0019", @"k0019"),new InputOutputColumnPair(@"k0020", @"k0020"),new InputOutputColumnPair(@"k0021", @"k0021"),new InputOutputColumnPair(@"k0022", @"k0022"),new InputOutputColumnPair(@"k0023", @"k0023"),new InputOutputColumnPair(@"k0024", @"k0024"),new InputOutputColumnPair(@"k0025", @"k0025"),new InputOutputColumnPair(@"k0026", @"k0026"),new InputOutputColumnPair(@"k0027", @"k0027"),new InputOutputColumnPair(@"k0028", @"k0028"),new InputOutputColumnPair(@"k0029", @"k0029"),new InputOutputColumnPair(@"k0030", @"k0030"),new InputOutputColumnPair(@"k0031", @"k0031"),new InputOutputColumnPair(@"k0032", @"k0032"),new InputOutputColumnPair(@"k0033", @"k0033"),new InputOutputColumnPair(@"k0034", @"k0034"),new InputOutputColumnPair(@"k0035", @"k0035"),new InputOutputColumnPair(@"k0036", @"k0036"),new InputOutputColumnPair(@"k0037", @"k0037"),new InputOutputColumnPair(@"k0038", @"k0038"),new InputOutputColumnPair(@"k0039", @"k0039"),new InputOutputColumnPair(@"k0040", @"k0040"),new InputOutputColumnPair(@"k0041", @"k0041"),new InputOutputColumnPair(@"k0042", @"k0042"),new InputOutputColumnPair(@"k0043", @"k0043"),new InputOutputColumnPair(@"k0044", @"k0044"),new InputOutputColumnPair(@"k0045", @"k0045"),new InputOutputColumnPair(@"k0046", @"k0046"),new InputOutputColumnPair(@"k0047", @"k0047"),new InputOutputColumnPair(@"k0048", @"k0048"),new InputOutputColumnPair(@"k0049", @"k0049"),new InputOutputColumnPair(@"k0050", @"k0050"),new InputOutputColumnPair(@"k0051", @"k0051"),new InputOutputColumnPair(@"k0052", @"k0052"),new InputOutputColumnPair(@"k0053", @"k0053"),new InputOutputColumnPair(@"k0054", @"k0054"),new InputOutputColumnPair(@"k0055", @"k0055"),new InputOutputColumnPair(@"k0056", @"k0056"),new InputOutputColumnPair(@"k0057", @"k0057"),new InputOutputColumnPair(@"k0058", @"k0058"),new InputOutputColumnPair(@"k0059", @"k0059")})      
                                    .Append(mlContext.Transforms.Concatenate(@"Features", new []{@"k0000",@"k0001",@"k0002",@"k0003",@"k0004",@"k0005",@"k0006",@"k0007",@"k0008",@"k0009",@"k0010",@"k0011",@"k0012",@"k0013",@"k0014",@"k0015",@"k0016",@"k0017",@"k0018",@"k0019",@"k0020",@"k0021",@"k0022",@"k0023",@"k0024",@"k0025",@"k0026",@"k0027",@"k0028",@"k0029",@"k0030",@"k0031",@"k0032",@"k0033",@"k0034",@"k0035",@"k0036",@"k0037",@"k0038",@"k0039",@"k0040",@"k0041",@"k0042",@"k0043",@"k0044",@"k0045",@"k0046",@"k0047",@"k0048",@"k0049",@"k0050",@"k0051",@"k0052",@"k0053",@"k0054",@"k0055",@"k0056",@"k0057",@"k0058",@"k0059"}))      
                                    .Append(mlContext.Regression.Trainers.LightGbm(new LightGbmRegressionTrainer.Options(){NumberOfLeaves=9,MinimumExampleCountPerLeaf=102,NumberOfIterations=5880,MaximumBinCountPerFeature=1024,LearningRate=0.00640258658423838F,LabelColumnName=@"will",FeatureColumnName=@"Features",Booster=new GradientBooster.Options(){SubsampleFraction=1F,FeatureFraction=0.653321662668523F,L1Regularization=2E-10F,L2Regularization=2E-10F}}));

            return pipeline;
        }
    }
}
